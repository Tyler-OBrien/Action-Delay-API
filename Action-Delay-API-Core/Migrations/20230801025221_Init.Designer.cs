// <auto-generated />
using System;
using Action_Delay_API_Core.Models.Database.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Action_Delay_API_Core.Migrations
{
    [DbContext(typeof(ActionDelayDatabaseContext))]
    [Migration("20230801025221_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Action_Delay_API_Core.Models.Database.Postgres.JobData", b =>
                {
                    b.Property<string>("JobName")
                        .HasColumnType("text");

                    b.Property<decimal?>("CurrentRunLengthMs")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("CurrentRunStatus")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CurrentRunTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("LastRunLengthMs")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("LastRunStatus")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastRunTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JobName");

                    b.ToTable("Jobs", (string)null);
                });

            modelBuilder.Entity("Action_Delay_API_Core.Models.Database.Postgres.JobDataLocation", b =>
                {
                    b.Property<string>("JobName")
                        .HasColumnType("text");

                    b.Property<string>("LocationName")
                        .HasColumnType("text");

                    b.Property<decimal?>("CurrentRunLengthMs")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("CurrentRunStatus")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CurrentRunTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("LastRunLengthMs")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("LastRunStatus")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastRunTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JobName", "LocationName");

                    b.ToTable("JobLocations", (string)null);
                });

            modelBuilder.Entity("Action_Delay_API_Core.Models.Database.Postgres.JobDataLocation", b =>
                {
                    b.HasOne("Action_Delay_API_Core.Models.Database.Postgres.JobData", null)
                        .WithMany()
                        .HasForeignKey("JobName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
